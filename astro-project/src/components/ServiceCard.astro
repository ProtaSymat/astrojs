---
export interface Props {
  title: string;
  description: string;
  icon: string;
  features: string[];
  gradient?: string;
}

const { 
  title, 
  description, 
  icon, 
  features, 
  gradient = "from-blue-600 to-purple-600" 
} = Astro.props;
---

<div class="bg-white rounded-xl shadow-lg hover:shadow-xl transition-shadow duration-300 p-6 group">
  <div class={`w-12 h-12 bg-gradient-to-r ${gradient} rounded-lg flex items-center justify-center mb-4 group-hover:scale-110 transition-transform duration-300`}>
    <div class="text-white text-2xl" set:html={icon}></div>
  </div>
  
  <h3 class="text-xl font-bold text-gray-900 mb-3">{title}</h3>
  <p class="text-gray-600 mb-4 leading-relaxed">{description}</p>
  
  <ul class="space-y-2">
    {features.map((feature) => (
      <li class="flex items-center text-sm text-gray-700">
        <svg class="w-4 h-4 text-green-500 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
        </svg>
        {feature}
      </li>
    ))}
  </ul>
  
  <div class="mt-6">
    <a href="/contact" class="inline-flex items-center text-blue-600 hover:text-blue-700 font-medium text-sm transition-colors">
      En savoir plus
      <svg class="w-4 h-4 ml-1 transition-transform group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
      </svg>
    </a>
  </div>
</div>